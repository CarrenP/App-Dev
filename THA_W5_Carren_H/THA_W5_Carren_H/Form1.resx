<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMIAAADICAMAAACNpM5lAAAABGdBTUEAALGPC/xhBQAAAM9QTFRF////
        /Pz8iDgQeMRQvPCYhDQQ/LTA7GxUmFg4iDwUjEQgoGRIyKiUhDAIlEwo0Liw/EBY3MS45NDIrHRY0LSo
        6NjQ9Ojk7ODcqGxQ+PTwwJiIsHxgsIxsvJB8uIh0/LzE/PT4tOiMtJyQ8MzM1NDMhHAspNh48JiItIRo
        kNRooKBYiFgkdMBMeMxU+Nzg8MysxFg8fLBI8KiQ2GBIgIw4fJw8mHBArEws+KSs7Gho/HSI1NCwqDgk
        tNSE4JR41FRAyLSQ7PTUtPSU1Dw89PjoSdi08gAAFjxJREFUeF7tXYl22ziyteCBGwuX4SKR4mZHlhPF
        zmInjpNO0j3d897/f9O7BYDaLDtaKFl9zrt92hEgkcRFoVBV2Hjy/1gTvXm4vH8UXNFncPn/HJhSZ2Hq
        eV4a9i/+gRyoyP1RHigppQp0HS9xoOQULu+4gHINvEAyzkCBMSaVN5wrqyn40MDI5whJoFBZwxgXpZ40
        Ey2EZKoYtEWlMg+z2Cu10BMvzojcsZFAiQYVY2pU9G1GUaoZB/y9yFKtOAQkJVdJmJEo7C+PBahkTzGR
        xy59cpJ6jAUhqtswGIagxLkKRCA5Z6qKj45DrxcJphKXshhxpiEGw6AQUJLc85CdeppzqcMj44BmVEup
        XapFzqWHcoJBoyCS1GWfnHgCgoiOjQKEICKXahEqpklxhw1D+3eZBjG0XUyV/RhAmiD9xqWmqCGGPn2n
        eLD0ZR4wWRhFORKgQ82ZpIa+gL7Hmde7IC15TE8wDXou9fLo9eLAX9YEACrQ9PoJ44t6biDQXx0ThYuQ
        +bVLzCEJWIImxoVLz2MipXdxRBSGI86XlRkoNNOR4mrFVyepYqPhMVEopZpZtSm8nCnNeOGSC4CGNIOj
        oQCroHngEvMIE/h7XK8SAvrVI6MgVrb3sAQF5q2QD6QQHBmFlR3SSQopcP2oszWAS3VEugAKaiUFT0MI
        o8ylFpEcVY/0pBRqUFi2yy2gPUdkFxYpXH67dJ9OSsGYmHl38wg11whNXerFQerst+r87fv379/cZw0H
        NXefl5AoVh2VjzTrVD/8m/DBJhBKKyeEy2/fP7lcQlQxRY64S748esOEq5H5+N1QsGLIPIQ2A/PxG+V/
        n7awk0lwbM72sOHc9v6/Gwrfzeew5r518M4ss99NAggR0RVHFfIgJOC+aTGXpqiurEXick/e2Ox/mwQw
        UizIjovC1FM9s0W1FBLhWw/vm82dSSFBIIHY2aWOAb1eX/mm63GFtWUVrcGzrattX4gjONMQgksdBRC1
        uS5pgULKbDDaCuH7mck+iQOuaADDpo4DoACHjvR5gULtc6MKrRDadiS4rGl05qgAfWY+uXPntrC2xeS+
        JFVw3VHb1Z6UipFhPjYKvdAqg7Vs//5kcgPfNK5WCI6BJ2DvjqwZAYj/BdfkktrSmkYfS2MVLl2P6nQ5
        huvX0OiSTR4NoAwVC0J8slVuzHDKOVnsN04KzjTndpjy+Bj0Ljwpqc5//+329udPrUUQKM5UILT++fP2
        9n9+e2NHOLRvxo+OiQFKQxgOPMXFRNMciZTSN+Dc/GMG5FkgkiL0YNN0RAPCR0PClKU37EdpDcfalJhz
        LhVqX6D+IQySBmhZNgzOtywjM7lAcHd5OdhiDPvpKKHKRyGZ0mXthVEldJ6Uk8mkTHKtgzD0RiUEhF/Q
        3IKuvIi0AXB3eiHYMmRppVHLaC1KN2m8crilRRwW4AoaTIm8jqhXAtyXhwc9/GIQTVD9jCshJuHKkZbH
        iApoOlSDSVH0LQv3zWFBDx5mYY7mz1SeTJ6t/EeIvbwSxCJoIvK4AffNwUDPvMjShCZoRa1TN0G4CeJ6
        VAWkF9DtF+BATwQBSEBqz9tMAHNI80KARFCFRrVd7iFAj7uIiID/xDDd+gg9Ad0OKpp1OxwJItBvAoZO
        ZfX40GbIPA2lUPXhpqGpsgahIALF1i1oEVmj0anpQ7Umekq/QRsSZgK5I4QNdEI9WnWyF+ARwyiHFle1
        HRzqCHGZwCnJjevksvYDqqQBwhU/SDoUgYUHH5GJdM8+uGFAjUh3ocaPQGPgarTXoSVikOV4jAnN9oCo
        hhdb7jGSIAY0fyxKl9E9sjzgLN8bhx40rV9KrlfOXXaFROyRA8kADETneryIWnOZ7Gd4BjcdJJIHHVmz
        p1EIKfeiD8QA5uDRWp09wBOSJd1zIAbNvjrTZdBiq6pz+wCbTMvu9qrJMzSCyQK9h0t2AtQILSjaX2+6
        BK2YCjsVA27WhyKsmlXeD/oeHNdOuyWjCH7eqV/3POJKGnVwyZ2BCCdV3IyWHgxFwFTa2Zw0NSPo14p1
        afuExzscd4UQKsZXLFnbK7LS72z5JGoiUvxQ/ekMlWJBRxpNjgX8a5c6IArGkk6MA5oRjNphzPIiGs1Z
        JwuiTYygDt6MCLVkZQfaAM8CHeohvLvH8DQTEINLbQ2EmglziygOjlzK0c5igCaE6oCexSLSLtZ0m+6I
        7TlQexqa7z473evFLycEiAGe0o5LTdClIdB5MSGc9AUPxrtSGAR7D/ifQ+0z2hnnUlsAQggZaw7qoi4i
        ljzfyecGhYqpVQuxD4bcl3CUXGILwChott+hr18h5WynKBo+asCrNWdi94Mw4LQhy6U2R6/nKTlxiZdB
        kXC1i3WjkFkdOtZZRGw2ZG3NAXYNqvCi7ciMxyS7UIgCPznguMUq1HBXt+9WabHdqt1oB0VU8WB7j5uW
        PL6gd+FQyh2W15M2m4WnL4pcydHWlqHXz7l6YVWg+QZWbqsMNAK2cpvXYRHnZnjVpTZDrzd268hfFFmO
        0H1bChfRiv3Lh4c2A/UusRl6w9SuwX5hTKRKt6aAPvWFxi7m4cmttyD2hvXK3b+HRqhYveVG0N6g4vLF
        zQIC6ICV2bYU4OiuQ2Ft05H1t1iFeDIQPO9vSyFfuYF5CYVo9GSt8LooqyrwNmeBqCfeikLvqT3YC8ho
        mTZTeg1vMFcMPw1GG48mCF/sk4LwaUM24+qXNjC3v2T+xrG4JgrbcHh2IC+7BPBvyW25Vh4RsQAPMrCg
        XZTZObDuqibtbzce1utdPDmQ9+H8kopweRkLVyzG5C/ah2jJkhja6+f2rD6DxKftYy6xAXq9TPHV61Av
        z88szqMZhdkAfjTrxWZ9VZbMKOTt9Wfna3Hw/K0MA4KMlLHRKss2LcDZWRq4YqFgrcDCKs9OBik1QZ1M
        rx9UdPCWAdezO6zFwZM832JwGBSemCScygD4Rvv6HdrSTgTvnzQaDmLf82cjOLNf+p/n7nC+jlERnPaz
        usTaQH8kVg/kXbqHGzRTdZ6y9XKel4JzOSn03AErU4Fx9WmOwtm5+/45lD7bYiyJJptZs8o2zz//LHVa
        yoMZW09wXyZV4Pv+3ETpoIBRMAxqd63FOv1S4fPNe1W0I/SClUvN44N7tMU5OPj4b2HVZOkBofZG6Xxv
        EHuKNir9/NNd2mINMXjc3zzoAYWRXGmuFilAHbxE6PXWn3teWXqRu26KNSiE3N+8VzVWIVg1FrlMYW0D
        5XC+0BCBNShEbCsKw4qtnN5ZpuC2L6+NZQrns+MMnsT2FPRKg7tcBJe9NpavX8My7EBhZbCw0KmenW28
        fHuLKthSFwYVmzuGsB9P3fx503Z2tkYzWIa70sFlPosUPdJ2UphSiHMt9LSPX6Dg8jbBh/kbuLzngU51
        c1fVNiTXVUba54zMlU3OyWELGRDa68/XVKR6O9NGPZKrdzodSAs6fNOmUY8WazrLj2F87fO1a6D06fRA
        l1gXsAujdnFwCn/PC9NqftW8CXl2GTH+sG6wQNjKzbPW2dY6LQsKx+Oo5Dx5kYk3BC5bHPphfCRph7Xp
        DKBiPB6HcOleZA464myyVcgTBtx5qrligQcOnuLKZBwYtS/TLUYkEXdO44XIbB6BGBJ3OMqBseVyGOhz
        CS22CTqCVkMdPDrHxWYdEKGiAcltKCB25rUrcA0OyQ+IgR981TDaMapyqzUMNIIBc+BStFmrGo9Hiid7
        2tP2JDw6KncbBtSSasbbuC0LA9QFOqWD7SSZQkhZb7eQBC2J1su34VjcSJ6MxxWTB559K8T2S7fhY9Dh
        Iq1BTjVHz4qAujyoQscVZ/W2085gnpVMtsuRsoTLZjxGB7fGIHZ3KBgT6I62o0DaQHuQCschVQjjxhNf
        2rPxDoNc7rYvCRxSaHE7PBH4UOgUvevhFJoY7LpCkhb+88aWGV57FYUgcigxxDUYjHbbo4eLh17A/Dyh
        xhQz6EGuOB/Nj3DtD0WJOMXbjYHlkArORZ2eFCM6+oVzxlR5gB0ZnoBjrHZmYDlEiYQ1SASdvQMCiEC5
        yve80dBLNOPoPqAHOzIwHC6yGgrBmS91EcZxWJszUJ6awuoCUUmH/ajGvI7F5e0C3KUXBXSyVGvlBnSQ
        y962z4eFZj60oLKHJ7ncnUD3gb+rxJx/Ry5r4oVzU1I7Ii2aUoswHZVC+pxL0XR5NAluhOhnacIH7gYv
        m3rUUQSUVIkWgZLoLaiRJt7YEOiIAVHwJK+WPCMYHTq+rJtFY7Hy3flu1N21L4vpigBRGOSPx+nRYBl6
        qG78pbCkFxGJfNJIxAa2/N0RIApRwMvlVp/VHN5TV7owGLgxqdJnxbC38fjpL4AIFA6eS8yg5U6RQ5iE
        zYrTrWg36c57qB6BVGHFTuFcPXr5y7rI0rKuBfNXbe6ojRg6lwIoPN4BoNVWUsjSiRjB0tMZgatcXrhk
        3R9cbSg8Ku1gxNXGOxsGYWIOMOTof9Tq44m8isu0ewowbI9Enia8PcN8XfSjXDHq+qXQyZPXaijerrvx
        ltHr9fXjzcJa+qIfh15RlwkddElHXQZ07iWdHDmpizSKl0Zr6lrR0Wx5ktfRM2PiHq2m61gMZqph6c1T
        J+Ql5alXVGVO5afiK8DR0EnZFF6YCj0pIsckyUFAj5o2/SQaKbs+Ax23i9CSFsRQa3jdkpOBNgeMPgI5
        OtyYq2pU6Sbth3CeA12vMY6GviqBQrtUN4AYSjb/Ko6onK2PgkfgWg8hN20KAkGTt1zABL/QVS7XPT4g
        Lrdfo/0UIIYMdajy0NRhNEHwQ8EbQH+DUT8jwMIOzIesD0Q//vKqUmvjuxn3bW3tz6Xq9u0eINAbZh5C
        EJ+qUyhOvlhS0tm0aPeUL5o/3yzg08ePUQweIBP/+KuoqgewXduphTOw6/baBRCDQWj8UmZrEzWvRtF4
        JMBBJ4k5ize4/fzbCvz555tPoPORFsGsb8r7otvXe0AE8QillKLydICKD36iTYXj8ThNwEjpstIKTeXn
        rSv2Krz5LFe9veop5D69is4ldgYi5xiayPRfPz5++u2zwVfGK1AYhyNa+6V0UmkmJfvqyrsIK51bvskS
        /MLsEHaJnYFWlKDW//q7/8mUhXBLwzvEYfyjDtTXr19vm8/0d0Vbug3Yz//g36+SbzCYHHNuDqnqRhK9
        Hu4n4v+NTYn+8x9TzK+c0dTbOArfmOynMaWwkRRokXa/s7eVwkFClfz990dTIFgnKtDnALS88E/K+xXa
        hrSJLtCpBXWaRuOsiyEAxDsobvh3Ru3o89fgqynSbcDZc+r72+fbrwvff2Yb9EjwMdBvkyXRo3j3sbBe
        r0BnKtJ+ZuTQNvfbrySNpwH15Qvq/ZOzDcTgoeM2p47Dvdw5eOj1arLAqkyz/sdftfw53C51srewIetv
        XIgYT8KwyJUP278rh16vQb8JI0aHeoPFpw1ozONPeCiPhhAIK4/GjaVdZpzuPr9AFCa+vL+/odPwla5/
        xHH88eOnT2/WZgJvA/Y5jgs6ZnQh3u97udcEuKtLz0O1ozvgQJOFNrEdDIW707v7K7gYPmx0Pkp//PgB
        HoRPRAZwxXUwWfgKP7hE4X/8CP+q6YUG0KlRWaeohTgtSuFVgs6eXzk2O3vn2IizZrcgDg3Jl19OT0/v
        vtzfwMND2ALnDkGAl4YhZEJO6Wqg7PS68FH1IOCsktdNHhbZ8qZpEnIXKTNoVtqLGYVUcLVb9IAeyWdE
        AXj1+vohYBQEoEKlUuLhIamqqi4KWuA8RVHANUU090BxA9xxlNTnKni4voMknYdOeVDVJF21pBoQMwo1
        32JR2zx6PXRw90Tg3dt/Aa/+uL5+uLmRxmc1QRt5rvbfFjZNZcUfqW6uHq6v/8Cl1zeWAjIRFuXTkHQF
        ZlLIPEZvJnapbUDW2VI4PSUK//rXf4nI9fX1FXBzQ69lp4JZNxyQ6LwINzc39Iv7L3+8wjX/xSWKWqEJ
        kuBL/yIAnXv/XmBCaZfYBvCRGLuyFF5bDg5vT9+9u7v7Atzf34PSApB7d/fu3enpe0f81QNEQp45zXc9
        sb9mhlD5UyUf7U4hU+wGZQFMS5ritclzQE0vwGUTzFevHmjfQlqnUTpp6I02z4fR0cyl6ntmaMyltgGc
        bQQDd7Y0pnQtFii4vBavXDbByO4afVHYutuN8Hn97Ji4595rBaQwrbvFPwjaGsbv35vSLNT1AgVSkDm8
        tWIzINn9oRZWk2XiFxv5YItaI5gHLNitU6UXyUn/xpZmgcJbm2fxTBsjKTzAPuFeZjOfwS/mJQJfOI7x
        7qYNYqBVSbYl2QI6LFB45itQgBA0KFyuu0AaUZabXc1SyWhz5I4UBjXzbUt6uiE9QwEXQRNGcFM/rLXd
        Aqh9t4so9Ggt2q7TDYj/Q8WvbOOe71bnVXapIc1RMAbxmqv08vzkZM1V5pn2A9OOPBoJ7+C9dOYMSfnF
        KvQTHN7N588L6J0Rz4MU4fmZvd0au0bMyrMsagTN1zfbr6eagebaWjEstKW5yl5oYvPk6AsYBR1fWgof
        1tg2Qi85CeBSki2kg/92ZgAKGcTgnIyFRj/jsEhhatnem/w/rlgSQZM/oEcanP9SHwrahghbLoPE64PA
        7gxAgaZ5blp31ZTRYlbbiw1plm8p3IACbnROEiCdeBZhxVkgBL2Gy777yeXvAtxlWDJ2c0fqsNDqlxrM
        FEvSeXXFchg22k22hj5XCt1ov58NTPk7YWA4ZIKcPaPSppAWcxTmmc20+a2l8GAmJ8xOLHfLpxEGXNJ6
        QguXuTvQsdLebMPhnS2WwRyFuV71EbHXDzxANL8WhQiuCM07d1d4C9xxmBIH6pbeubolzFrMHIU5m0c/
        /O/r0ysu4TuvQyEUXHZ/5j8B9xzAUMor57K2JFYqw4yCyXt9+v6L5E1kd1a6Gz4BD17xvt6mYjgo6PT9
        on2YclghBcuTUneKi+TXPlKUQw/K/kXnq0gsqC2ha+UQhFHqtsivWr/6kRScgtPH91fW6Zl5qqtQ5Ihg
        aa/FXoQA4MYXMXwW3wmiLfIrKIfBlJRNWqtmGd5doat/vOplHv1USC4DWuW/LwaGA73bCTV1c3+HgrXd
        6LTpu+7HpagZvaLEu7srSaM2bQSwClWhuc+CsrsFhatBdx9G9Jo2pq6+3LW960ylKT1NvX5FBN7dfbm6
        YWRuJRePVp30o7AoRTGiFchMJekeG1ELesIggvmEB3lzdX/39jWVeiqG07ev3ef3709fv6UBwCszdBSM
        Ipr8F80sYh70w0kyqquchvo4DZ2HZlHqnhlYDr3B2EjCDHLdX1//gWK/dzCfqO6p9Ci+GWEKiv7AvCCN
        SZEIkZf0atKkokU9drSMqdyLBx1NS60Bes5w4OX0hlfLw455zQE5VHgUTqqgTO1yx4tsYt4Ja0fK3ECf
        UoFOirA/tP6Qe8T+YZ52kYWjhFYngMbyShJTs5IWXhR2vaxDXCQPuIJALxvGt3HfVT7g7n4YuGf2BnGY
        jmiQWqA6baMxFSu0Gfl2vjIwvWYQR2maevg/bNeiOtg7HxLuwdSmsn4cEUID+jRG5boZV8LyJctw378E
        XAmeh/utgcuaweUfA1yJWrjcPeDk5P8AOrS05L45I9EAAAAASUVORK5CYII=
</value>
  </data>
</root>